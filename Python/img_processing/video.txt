'''
Created on 05/05/2019

@author: HP
'''
import numpy as np
import cv2
captura_video = cv2.VideoCapture('prueba_4.mp4')
tamanio,cuadro = captura_video.read()
r,h,c,w = 250,90,400,125 
seguimiento = (c,r,w,h)
roi = cuadro[r:r+h, c:c+w]
hsv_roi = cv2.cvtColor(cuadro, cv2.COLOR_BGR2HSV)
mask = cv2.inRange(hsv_roi, np.array((0., 60.,32.)), np.array((180.,255.,255.)))
roi_hist = cv2.calcHist([hsv_roi],[0],mask,[180],[0,180])
cv2.normalize(roi_hist,roi_hist,0,255,cv2.NORM_MINMAX)
term_crit = ( cv2.TERM_CRITERIA_EPS | cv2.TERM_CRITERIA_COUNT, 10, 1 )
while(1):
  tamanio ,cuadro = captura_video.read()
  if tamanio == True:
    cuadro_seguimiento = cv2.cvtColor(cuadro, cv2.COLOR_BGR2HSV)
    dst = cv2.calcBackProject([cuadro_seguimiento],[0],roi_hist,[0,180],1)
    tamanio, seguimiento = cv2.CamShift(dst, seguimiento, term_crit)
    pts = cv2.boxPoints(tamanio)
    pts = np.int0(pts)
    img2 = cv2.polylines(cuadro,[pts],True, 255,2)
    cv2.imshow('img2',img2)
    k = cv2.waitKey(60) & 0xff
    if k == 13:
      break
    else:
      cv2.imwrite(chr(k)+".jpg",img2)
  else:
    break
cv2.destroyAllWindows()
captura_video.release()